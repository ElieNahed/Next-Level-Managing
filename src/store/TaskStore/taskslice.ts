import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { Task } from '../../components/molecules/taskform'; // Import Task interface

// Define the initial state for tasks
interface TaskState {
  tasks: Task[];
  idCounter: number; // Add idCounter to the state
}

const initialState: TaskState = {
  tasks: [],
  idCounter: 1, // Initialize idCounter to 1
};

// Create a slice for managing tasks
const taskSlice = createSlice({
  name: 'tasks',
  initialState,
  reducers: {
    // Add a reducer for adding a new task
    addTask(state, action: PayloadAction<Task>) {
      const newTask = action.payload;
      newTask.id = state.idCounter; // Assign id
      state.tasks.push(newTask);
      state.idCounter++; // Increment idCounter
    },
    // Add other reducers as needed (e.g., for updating or deleting tasks)
  },
});

// Export action creators generated by createSlice
export const { addTask } = taskSlice.actions;

// Export the reducer function generated by createSlice
export default taskSlice.reducer;
